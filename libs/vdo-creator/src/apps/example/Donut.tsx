/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useLoader } from '@react-three/fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
const donutGLB = require('./assets/donut.glb')

export default function Model(props: any) {
  const group = useRef()
  const { nodes, materials } = useGLTF(donutGLB)
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Donut001.geometry}
        material={materials['Material.004']}
        position={[-0.01, 0.03, 0]}
        rotation={[-Math.PI, 0, -Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icing001.geometry}
        material={materials['Material.002']}
        position={[-0.01, 0.03, 0]}
        rotation={[-Math.PI, 0, -Math.PI]}
      />
      <mesh castShadow receiveShadow geometry={nodes.Plane.geometry} material={materials['Material.001']} />
      <mesh castShadow receiveShadow geometry={nodes.Donut.geometry} material={nodes.Donut.material} />
      <mesh castShadow receiveShadow geometry={nodes.Icing.geometry} material={nodes.Icing.material} />
    </group>
  )
}

useGLTF.preload('/untitled.glb')
